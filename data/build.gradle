plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.room:room-common:2.4.2'
    implementation 'androidx.room:room-ktx:2.4.2'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation project(':domain')

    api "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    kapt("androidx.hilt:hilt-compiler:$hilt_compiler_version")

    api "com.google.code.gson:gson:$gson"
    api "com.squareup.retrofit2:converter-gson:$gson"

    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    api "com.squareup.okhttp3:logging-interceptor:$okhttp_interceptor"

    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    api "androidx.paging:paging-runtime:$paging_version"
    api "androidx.paging:paging-compose:$paging_compose_version"

}